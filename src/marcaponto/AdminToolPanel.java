/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package marcaponto;
import java.sql.*;
import javax.swing.table.*;

/**
 *
 * @author vinib
 */
public class AdminToolPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminToolPanel
     */
    public AdminToolPanel(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();
        btnAlterarCadastro = new javax.swing.JButton();
        btnConsultarSelec = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluirSelec = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuário", "Nome", "Ativo", "Último ponto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbUsuarios);

        btnExit.setText("Sair");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnAlterarCadastro.setText("Meu cadstro");
        btnAlterarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarCadastroActionPerformed(evt);
            }
        });

        btnConsultarSelec.setText("Consultar selecionados");
        btnConsultarSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarSelecActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluirSelec.setText("Excluir selecionados");
        btnExcluirSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirSelecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConsultarSelec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlterarCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExcluirSelec, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(btnAlterarCadastro)
                    .addComponent(btnConsultarSelec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirSelec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtualizar)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        mainFrame.switchPanel("LOGIN");
    }//GEN-LAST:event_btnExitActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        atualizarTabela();
    }//GEN-LAST:event_formComponentShown

    private void btnAlterarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarCadastroActionPerformed
        // TODO add your handling code here:
        mainFrame.switchPanel("ALTER_INFO");
    }//GEN-LAST:event_btnAlterarCadastroActionPerformed
    private ResultSet getResultSetForSelectedUsers(Connection conn) throws SQLException {
        Statement st = conn.createStatement();
        String sql = "SELECT * FROM projeto_java.Usuarios WHERE ";
        DefaultTableModel model = (DefaultTableModel)tbUsuarios.getModel();
        int selectedRows[] = tbUsuarios.getSelectedRows();
        for (int i = 0, end = tbUsuarios.getSelectedRowCount(); i < end; i++) {
            String usuario = (String)model.getValueAt(selectedRows[i], 0);
            sql += "usuario = \"" + usuario + "\"" + (i < end - 1 ? " OR " : ";");
        }
        return st.executeQuery(sql);
    }
    private void btnConsultarSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarSelecActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        try {
            conn = ConexaoMySQL.conectarBanco();
            ResultSet rs = getResultSetForSelectedUsers(conn);
            while (rs.next()) {
                AdminSelectedUserFrame newFrame = 
                        new AdminSelectedUserFrame(
                                false, 
                                rs.getInt("id"), 
                                rs.getString("nome"),
                                rs.getString("cpf"),
                                rs.getString("telefone"),
                                rs.getString("email")
                        );
                newFrame.setVisible(true);
            }
        }
        catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        finally {
            if (conn != null) {
                try {
                    conn.close();
                }
                catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
        
    }//GEN-LAST:event_btnConsultarSelecActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        atualizarTabela();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void atualizarTabela() {
        DefaultTableModel model = (DefaultTableModel)tbUsuarios.getModel();
        model.setRowCount(0);
        Connection conn = null;
        try
        {
            conn = ConexaoMySQL.conectarBanco();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(
                    """
                    SELECT u.usuario, p.estado, p.hora, u.nome
                    FROM projeto_java.Pontos as p
                        JOIN projeto_java.Usuarios as u on p.id_usuario = u.id
                    """
            );
            while (rs.next()) {
                String usuario = rs.getString("usuario");
                String nome = rs.getString("nome");
                String estado = rs.getBoolean("estado") ? "Ativo" : "Inativo";
                String hora = rs.getString("hora");
                model.addRow(new Object[]{usuario, nome, estado, hora});
            }
        }
        catch (SQLException e)
        {
            System.out.println(e.getMessage());
        }
        finally {
            if (conn != null) {
                try {
                    conn.close();
                }
                catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }
    
    private void btnExcluirSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirSelecActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        try {
            conn = ConexaoMySQL.conectarBanco();
            ResultSet rs = getResultSetForSelectedUsers(conn);
            String sql = "DELETE FROM projeto_java.Usuarios WHERE ";
            while (rs.next()) {
                sql += "id = " + rs.getInt("id") + " OR ";
            }
            if (!sql.isEmpty()) {
                sql = sql.substring(0, sql.length() - 4);
                sql += ';';
            }
            Statement st = conn.createStatement();
            st.executeUpdate(sql);
        }
        catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        finally {
            if (conn != null) {
                try {
                    conn.close();
                }
                catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnExcluirSelecActionPerformed

    MainFrame mainFrame;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCadastro;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnConsultarSelec;
    private javax.swing.JButton btnExcluirSelec;
    private javax.swing.JButton btnExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUsuarios;
    // End of variables declaration//GEN-END:variables
}
